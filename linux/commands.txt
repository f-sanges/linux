ctrl + alt + t 						-> apre terminale

apt-cache search something			-> per cercare attraverso il package manager
esempio: apt-cache search gimp*		


apt-cache policy gimp								-> per cercare quanto installato

dpkg -i file.deb									-> installare deb

apt-get update										-> upgrade di tutti i pacchetti

find . -size +1m									-> cerca file con dimensione > 1MB
find . -not -iname "*.txt"							-> not in find
find . -maxdepth 1 -iname "*.txt"					-> maxdepth 1 cerca solo nella cartella (no recursion)

grep qualcosa file1 file2							-> grep può effettuare la ricerca su + files
grep -n												-> oltre ai risultati visualizza il num di riga

find . -iname "*.txt" -exec grep -i qualcosa {} + 	-> uso di exec per combinare find e grep
-exec command {} +
       This variant of the -exec action runs the specified command on the selected files, but the command
       line is built by appending each selected file name at the end; the total number of invocations  of
       the command will be much less than the number of matched files.  The command line is built in much
       the same way that xargs builds its command lines.  Only one instance of `{}' is allowed within the
       command.  The command is executed in the starting directory.

find . -iname "*.txt" | tee file.txt				-> redirect a file e a schermo

find ! -user USER_NAME								-> find in the current directory all the files not owned by USER_NAME

pgrep -u root ssh			-> will only list the processes that are called sshd and are owned by root.

sudo systemctl start elasticsearch   	-			> simile a :
														sudo servive elasticsearch start (NB cambia l'ordine dei comandi)


crontab -e											-> qui puoi specificare un task con sintassi:  m h  dom mon dow   command
														minute (m), hour (h), day of month (dom), month (mon), and day of week (dow)
														NB: è per l'utente; per root esegui: sudo crontab -e




sudo tcpdump -i wl01 -A port 22						-> tcpdump su interfaccia wl01 e porta 22 -A in ASCII

nmap IP												-> dice i servizi attivi

/etc/ssh/sshd_config								-> tutte le config per ssh (es porta, puoi consentire accesso solo a determinati user con AllowUsers




unset <var-name>							-> Unset di una variabile settata ad esempio con export


shift up/down								-> Move up/down the output after a cmd like cat


ls -lR										-> Recursive ls

{} brackets for globbing
ex1: echo {1..3}.log  -> 1.log 2.log 3.log
ex2: echo {a..c}.log  -> a.log b.log c.log
ex3: echo {a1,a2}.log -> a1.log a2.log


info										-> informations about Linux commands

vi											-> Ctrl+R  = ReDo
											   ESC + U = UnDo
											   Pressing V = Visual line selection, v = visual selection (move with arrows)
											   Copy(Yank)/Paste is done with Y/P
											   
Copy / paste in terminal					-> Ctrl+Shift+c / Ctrl+Shift+v

/var/log/auth.log or /var/log/secure:		-> Keep authentication logs for both successful or failed logins, and authentication processes. Storage depends on system type. 
											   For Debian/Ubuntu, look in /var/log/auth.log. For Redhat/CentrOS, go to /var/log/secure
											   
											   
kill -l										-> show all the signals that can be sended to a process

lscpu										-> show information about cpu
nproc										-> show numbers of proc			

uptime										-> Example: 12:13:58 up 5 days,  1:23,  0 users,  load average: 0.00, 0.00, 0.00  = avg load of the last 1,5,15 min (depends on num cpu)
						
locate -i NOME_FILE							-> locate (-i not case sensitive)										   

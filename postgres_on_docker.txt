PULL POSTGRES IMAGE
docker pull postgres

CHECK IMAGE
docker image ls
[docker@centos7 ~]$ docker image ls
REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE
postgres                       latest              c96f8b6bc0d9        8 days ago          314MB



$ docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres
The default postgres user and database are created in the entrypoint with initdb.

The postgres database is a default database meant for use by users, utilities and third party applications.

postgresql.org/docs



If there is the following error:
WARNING: IPv4 forwarding is disabled. Networking will not work.
do:
	check sysctl net.ipv4.ip_forward
	net.ipv4.ip_forward = 0		(in my case it was not set)
	add net.ipv4.ip_forward=1 in /etc/sysctl.conf



DOCKER RUN
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres


DOCKER START
docker ps -add	-> take the id of postgres container
docker start id_container_postgres


ENTER THE CONTAINER:
docker exec -it id_container_postgres bash



CHANGE USER:
su - postgres



ACCESS TO PSQL:
psql




CHECK POSTGRES VERSION (Example):
postgres=# select version();
                                                     version                                                      
------------------------------------------------------------------------------------------------------------------
 PostgreSQL 13.0 (Debian 13.0-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit
(1 row)





LIST DATABASE:
\l


CREATE DATABASE:
CREATE DATABASE prova;




SWITCH TO A DB
switching to a database
\c dbname


EXIT DB
exit database
\q


DROP DATABASE
drop database
DROP DATABASE dbname;
Cannot drop a database that has any open connections, including our own connection. Switch to a different database, then drop the one to which youâ€™re no longer connected.


USE CLI COMMANDS
use regular CLI commands
\! <command> for example: \! pwd

CREATE TABLES (example)
CREATE TABLE COMPANY(
	ID INT PRIMARY KEY NOT NULL,
	NAME TEXT NOT NULL,
	AGE INT NOT NULL,
	ADDRESS CHAR(50),
	SALARY REAL
	);
	

INSERT RECORDS
INSERT INTO tablename (column1, column2, column3,...columnN) VALUES (value1, value2, value3,...valueN), (...);
example:
INSERT INTO company VALUES (1, 'Francesco', 38)				#NB single quotes

CREATE TABLE and INSERT (Example)
prova=# \d customers
                                    Table "public.customers"
 Column |         Type          | Collation | Nullable |                Default
--------+-----------------------+-----------+----------+----------------------------------------
 cid    | integer               |           | not null | nextval('customers_cid_seq'::regclass)
 cname  | character varying(50) |           |          |
 cemail | character varying(50) |           |          |
Indexes:
    "customers_pkey" PRIMARY KEY, btree (cid)

prova=# INSERT INTO customers (cname, cemail) VALUES ('Francesco Sanges', 'francesco.sanges@gmail.com');
INSERT 0 1
prova=# SELECT * FROM customers;
 cid |      cname       |           cemail
-----+------------------+----------------------------
   1 | Francesco Sanges | francesco.sanges@gmail.com
(1 row)










LISTING TABLES
\d 
\d tablename


DROP TABLE
DROP TABLE tablename;






